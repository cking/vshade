name: Build VSHade

on:
  schedule:
    - cron: 5 2 * * *
  push:
  workflow_dispatch:

env:
  VSHADE_REPO: cking/vshade
  RESHADE_REPO: crosire/reshade
  GH_TOKEN: ${{ github.token }}

jobs:
  gather_env:
    name: Gather Environment
    runs-on: ubuntu-latest

    outputs:
      reshade_version: ${{ steps.reshade.outputs.version }}
      reshade_source: ${{ steps.reshade.outputs.source }}
      vshade_version: ${{ steps.vshade.outputs.version }}
      vshade_reshade: ${{ steps.vshade.outputs.reshade }}

    steps:
      - name: Get latest ReShade release
        id: reshade
        run: |
          tag=$(gh api --method GET /repos/$RESHADE_REPO/tags | jq .[0])
          ver=$(echo $tag | jq -r .name | tr -d v)
          source=$(echo $tag | jq -r .zipball_url)

          echo "Found ReShade $ver ( $source )"
          echo "version=$ver" >> "$GITHUB_OUTPUT"
          echo "source=$source" >> "$GITHUB_OUTPUT"

      - name: Get latest VSHade release
        id: vshade
        run: |
          has_releases=$(gh api --method GET /repos/cking/vshade/releases | jq ".|length")
          if [ $has_releases -eq 0 ]; then
            echo version=0 >> "$GITHUB_OUTPUT"
            echo reshade=0 >> "$GITHUB_OUTPUT"
            exit 0
          fi

          rel=$(gh api --method GET /repos/$VSHADE_REPO/releases/latest)

          name=$(echo $rel | jq -r .name)
          ver=$(echo $name | cut -d- -f1 | tr -d v)
          reshade=$(echo $name | cut -d- -f2)

          echo "Found VSHade $ver ( $reshade )"
          echo "version=$ver" >> "$GITHUB_OUTPUT"
          echo "reshade=$source" >> "$GITHUB_OUTPUT"

  fetch_reshade:
    name: Fetch and Build Reshade
    runs-on: windows-latest
    needs: gather_env
    if: needs.gather_env.outputs.reshade_version != needs.gather_env.outputs.vshade_reshade

    steps:
      - name: Checkout VSHade
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1

      - name: Fetch ReShade source
        run: |
          Invoke-WebRequest -Uri "${{ needs.gather_env.outputs.reshade_source }}" -OutFile reshade.zip
          Expand-Archive -Path reshade.zip -DestinationPath . -Force
          Move-Item -Path "crosire-reshade-*" -Destination "reshade" -Force

      - name: Patch ReShade
        run: |
          cd reshade
          git.exe apply ../reshade-patches/unlock.patch

      - name: Build ReShade
        run: |
          cd reshade
          msbuild.exe ReShade.sln /p:configuration=Release /p:platform=64-bit
